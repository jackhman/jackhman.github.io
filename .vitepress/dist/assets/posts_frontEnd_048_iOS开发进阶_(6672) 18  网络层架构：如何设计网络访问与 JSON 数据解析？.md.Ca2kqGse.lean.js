import{_ as t,F as p,g as h,K as n,h as i,l as s,ar as e,o as l}from"./chunks/framework.VlluEs-f.js";const T=JSON.parse('{"title":"18网络层架构：如何设计网络访问与JSON数据解析？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/frontEnd/048_iOS开发进阶/(6672) 18  网络层架构：如何设计网络访问与 JSON 数据解析？.md","filePath":"posts/frontEnd/048_iOS开发进阶/(6672) 18  网络层架构：如何设计网络访问与 JSON 数据解析？.md","lastUpdated":1718371218000}'),k={name:"posts/frontEnd/048_iOS开发进阶/(6672) 18  网络层架构：如何设计网络访问与 JSON 数据解析？.md"},d=s("h1",{id:"_18网络层架构-如何设计网络访问与json数据解析",tabindex:"-1"},[i("18网络层架构：如何设计网络访问与JSON数据解析？ "),s("a",{class:"header-anchor",href:"#_18网络层架构-如何设计网络访问与json数据解析","aria-label":'Permalink to "18网络层架构：如何设计网络访问与JSON数据解析？"'},"​")],-1),r=s("p",null,"为了存取服务器上的数据，并与其他用户进行通信，几乎所有的 iOS App 都会访问后台 API 。目前流行的后台 API 设计有几种方案： RESTful、gRPC、GraphQL 和 WebSocket。其中，gRPC 使用 Protobuf 进行数据传输， GraphQL 和 RESTful 往往使用 JSON 进行传输。",-1),E=s("p",null,"为了把访问后台 API 的网络传输细节给屏蔽掉，并为上层模块提供统一的访问接口，我们在架构 App 的时候，往往会把网络访问封装成一个独立的 Networking 模块。像我们的 Moments App 也不例外，它的这个模块负责访问 BFF，同时把返回的 JSON 数据进行解码。所以，这一讲，我主要介绍下 Networking 模块的架构设计与实现，以及如何使用 Swift 的 Codable 来解码返回的 JSON 数据。",-1),o=s("h3",{id:"networking-模块架构",tabindex:"-1"},[i("Networking 模块架构 "),s("a",{class:"header-anchor",href:"#networking-模块架构","aria-label":'Permalink to "Networking 模块架构"'},"​")],-1),g=s("p",null,"下图是朋友圈功能 Networking 模块的具体架构。",-1),c=e("",6),y=e("",39),F=e("",20),C=e("",13);function u(m,D,B,b,A,S){const a=p("Image");return l(),h("div",null,[d,r,E,o,g,n(a,{alt:"图片2.png",src:"https://s0.lgstatic.com/i/image6/M01/3A/82/Cgp9HWB_3o2AYfKOAAONWHcpJpI148.png"}),i(),c,n(a,{alt:"图片1.png",src:"https://s0.lgstatic.com/i/image6/M01/3A/82/Cgp9HWB_3pmAR0JMAAGYfVaC1qI931.png"}),i(),y,n(a,{alt:"图片10.png",src:"https://s0.lgstatic.com/i/image6/M01/3A/82/Cgp9HWB_3tuABbZnAAUdSISnc44399.png"}),i(),F,n(a,{alt:"图片11.png",src:"https://s0.lgstatic.com/i/image6/M00/3A/8A/CioPOWB_3yGAbcmbAAT0CvLwTTw986.png"}),i(),C])}const M=t(k,[["render",u]]);export{T as __pageData,M as default};
