import{_ as p,F as l,g as h,K as n,h as s,l as i,ar as t,o as e}from"./chunks/framework.VlluEs-f.js";const B=JSON.parse('{"title":"07案例分析：无处不在的缓存，高并发系统的法宝","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Java 性能优化实战 21 讲_文档/(4184) 07  案例分析：无处不在的缓存，高并发系统的法宝.md","filePath":"posts/backEnd/Java 性能优化实战 21 讲_文档/(4184) 07  案例分析：无处不在的缓存，高并发系统的法宝.md","lastUpdated":1718371218000}'),k={name:"posts/backEnd/Java 性能优化实战 21 讲_文档/(4184) 07  案例分析：无处不在的缓存，高并发系统的法宝.md"},r=i("h1",{id:"_07案例分析-无处不在的缓存-高并发系统的法宝",tabindex:"-1"},[s("07案例分析：无处不在的缓存，高并发系统的法宝 "),i("a",{class:"header-anchor",href:"#_07案例分析-无处不在的缓存-高并发系统的法宝","aria-label":'Permalink to "07案例分析：无处不在的缓存，高并发系统的法宝"'},"​")],-1),g=i("p",null,'在上一课时，我们介绍了"缓冲"，这一课时我将介绍"缓冲"的孪生兄弟"缓存"。',-1),d=i("p",null,"和缓冲类似，缓存可能是软件中使用最多的优化技术了，比如：在最核心的 CPU 中，就存在着多级缓存；为了消除内存和存储之间的差异，各种类似 Redis 的缓存框架更是层出不穷。",-1),E=i("p",null,"缓存的优化效果是非常好的，它既可以让原本载入非常缓慢的页面，瞬间秒开，也能让本是压力山大的数据库，瞬间清闲下来。",-1),o=i("p",null,[i("strong",null,"缓存"),s(" ，"),i("strong",null,"本质"),s("上是为了协调两个速度差异非常大的组件，如下图所示，通过加入一个中间层，将常用的数据存放在相对高速的设备中。")],-1),c=t("",9),y=t("",8),_=t("",33),u=t("",5),F=t("",18),C=t("",11);function A(v,D,b,m,L,f){const a=l("Image");return e(),h("div",null,[r,g,d,E,o,n(a,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image/M00/3C/6B/CgqCHl8nuCKAad7oAAAk6v90xvo900.png"}),s(),c,n(a,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image/M00/3C/60/Ciqc1F8nuDmAJcstAABnG73x05M360.png"}),s(),y,n(a,{alt:"Drawing 5.png",src:"https://s0.lgstatic.com/i/image/M00/3C/6C/CgqCHl8nuFGACX8vAABYHt8o1wc201.png"}),s(),_,n(a,{alt:"Drawing 7.png",src:"https://s0.lgstatic.com/i/image/M00/3C/6C/CgqCHl8nuJeAQCW4AABgBDKI74g880.png"}),s(),u,n(a,{alt:"Drawing 8.png",src:"https://s0.lgstatic.com/i/image/M00/3C/61/Ciqc1F8nuKqAJaGZAAF4FboRD9E367.png"}),s(),F,n(a,{alt:"Drawing 9.png",src:"https://s0.lgstatic.com/i/image/M00/3C/6C/CgqCHl8nuQWAKsjIAAG1hzHS76Q255.png"}),s(),C])}const S=p(k,[["render",A]]);export{B as __pageData,S as default};
