import{_ as n,F as k,g as l,K as t,h as s,l as i,ar as h,o as p}from"./chunks/framework.VlluEs-f.js";const b=JSON.parse('{"title":"第39讲：测试自动化设计模式：一步到位","description":"","frontmatter":{},"headers":[],"relativePath":"posts/devops/112-高效敏捷测试文档/(1624) 第39讲：测试自动化设计模式：一步到位.md","filePath":"posts/devops/112-高效敏捷测试文档/(1624) 第39讲：测试自动化设计模式：一步到位.md","lastUpdated":1718371218000}'),e={name:"posts/devops/112-高效敏捷测试文档/(1624) 第39讲：测试自动化设计模式：一步到位.md"},E=i("h1",{id:"第39讲-测试自动化设计模式-一步到位",tabindex:"-1"},[s("第39讲：测试自动化设计模式：一步到位 "),i("a",{class:"header-anchor",href:"#第39讲-测试自动化设计模式-一步到位","aria-label":'Permalink to "第39讲：测试自动化设计模式：一步到位"'},"​")],-1),r=i("p",null,"第 37 讲在讨论基于事件流图的测试设计时，就已经触及基于模型的软件测试（Model-Based Testing，MBT），事件流图、有限状态机等可以被看做是测试模型，基于模型的自动化测试才是更为彻底的自动化测试。因为基于模型的自动化测试可以自动生成测试用例或对应的自动化测试脚本，然后自动执行相应的测试脚本，而日常我们讨论的自动化测试，只能算半自动化测试------测试执行自动化，而脚本的开发还是手工的。",-1),g=i("p",null,'MBT 中的模型是基于需求或业务分析而创建的，之前在第 24 讲"BDD 及其自动化实践"中讨论了：通过 BDD 自动化框架 Cucumber 的 Feature 文件实现可执行的业务规范，直接让需求可执行（活文档）。也就是从软件研发的源头------需求着手，将需求直接转换为自动化测试脚本，真正实现了"一步到位"的自动化测试。',-1),d=h("",7),F=i("p",null,"我们还可以用对象限制语言（Object Constrained Language）来描述前置条件和后置条件，如下所示，可以设置不同的前置条件：",-1),C=i("p",null,"在给定前置条件下的后置条件：",-1),y=i("p",null,"生成测试用例的伪代码如下所示：",-1),o=i("p",null,"不仅可以基于 MBT 方法生成测试用例，而且也可以基于规范的接口文档生成测试用例。即使不采用人工智能技术，采用一般的技术也能基于规范的 API 接口文档生成测试用例，因为接口测试设计实质就是要解决接口参数的测试数据设计。例如，接口文档采用 swagger 或 Open API 3.0 规范来描述，GET 接口传 query 参数，POST 请求传 formdata 参数等，这样通过解析 swagger 的 JSon 数据，就可以自动生成测试代码。",-1),_=i("p",null,"GET 接口定义示例：",-1),c=i("p",null,"POST 接口定义示例：",-1),B=h("",6),m=h("",8);function u(T,A,S,D,P,q){const a=k("Image");return p(),l("div",null,[E,r,g,t(a,{alt:"image (2).png",src:"https://s0.lgstatic.com/i/image/M00/0E/FD/CgqCHl7Gf5uAB9zZAADGnnpRUSM676.png"}),s(),d,t(a,{alt:"image.png",src:"https://s0.lgstatic.com/i/image/M00/0E/FC/CgqCHl7GfVWAHJ6QAABay5X0GBg771.png"}),s(),F,t(a,{alt:"image3.png",src:"https://s0.lgstatic.com/i/image/M00/0E/FE/CgqCHl7GgAiASQqXAADhNYIE5yA095.png"}),s(),C,t(a,{alt:"image4.png",src:"https://s0.lgstatic.com/i/image/M00/0E/F2/Ciqc1F7GgBaAJDBSAAD9uAjeLkc253.png"}),s(),y,t(a,{alt:"image5.png",src:"https://s0.lgstatic.com/i/image/M00/0E/FE/CgqCHl7GgCaAEV4pAAJ0nzqWxUU092.png"}),s(),o,_,t(a,{alt:"image6.png",src:"https://s0.lgstatic.com/i/image/M00/0E/F2/Ciqc1F7GgEuAHEsRAAEQq5gi3wU537.png"}),s(),c,t(a,{alt:"image7.png",src:"https://s0.lgstatic.com/i/image/M00/0E/FE/CgqCHl7GgFyAeTLRAAEHDji8uCo254.png"}),s(),B,t(a,{alt:"image8.png",src:"https://s0.lgstatic.com/i/image/M00/0E/F2/Ciqc1F7GgG6ADV6wAADtqomJc4s857.png"}),s(),m])}const G=n(e,[["render",u]]);export{b as __pageData,G as default};
