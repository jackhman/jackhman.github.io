import{_ as l,F as e,g as h,K as t,h as s,ar as n,l as i,o as p}from"./chunks/framework.VlluEs-f.js";const b=JSON.parse('{"title":"第24讲：服务调用失败的处理策略与实践","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/云原生微服务架构实战精讲_文档/(1828) 第24讲：服务调用失败的处理策略与实践.md","filePath":"posts/backEnd/云原生微服务架构实战精讲_文档/(1828) 第24讲：服务调用失败的处理策略与实践.md","lastUpdated":1718371218000}'),k={name:"posts/backEnd/云原生微服务架构实战精讲_文档/(1828) 第24讲：服务调用失败的处理策略与实践.md"},r=n("",62),E=n("",6),d=i("h3",{id:"总结",tabindex:"-1"},[s("总结 "),i("a",{class:"header-anchor",href:"#总结","aria-label":'Permalink to "总结"'},"​")],-1),g=i("p",null,"微服务之间可以通过同步 API 调用来进行交互。本课时以 REST API 为例，说明了服务调用失败时的处理策略，包括重试和使用断路器等，还介绍了 Hystrix 和 Sentinel 这两个开源库。通过本课时的学习，你可以掌握在 API 调用时如何对可能出现的错误情况进行处理，以及使用 Hystrix 或 Sentinel 来帮助你解决问题。",-1);function y(o,c,F,u,A,x){const a=e("Image");return p(),h("div",null,[r,t(a,{alt:"hystrix-dashboard.png",src:"https://s0.lgstatic.com/i/image/M00/19/09/Ciqc1F7Z6G6AKyimAAI8lkXCM94013.png"}),s(),E,t(a,{alt:"sentinel-dashboard.png",src:"https://s0.lgstatic.com/i/image/M00/19/09/Ciqc1F7Z6HuAXO9ZAAIXI0MwGo8355.png"}),s(),d,g])}const f=l(k,[["render",y]]);export{b as __pageData,f as default};
