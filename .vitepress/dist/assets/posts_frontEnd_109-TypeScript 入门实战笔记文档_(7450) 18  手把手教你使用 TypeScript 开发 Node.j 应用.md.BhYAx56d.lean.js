import{_ as p,F as h,g as l,K as n,h as i,ar as t,l as s,o as k}from"./chunks/framework.VlluEs-f.js";const A=JSON.parse('{"title":"18手把手教你使用TypeScript开发Node.j应用","description":"","frontmatter":{},"headers":[],"relativePath":"posts/frontEnd/109-TypeScript 入门实战笔记文档/(7450) 18  手把手教你使用 TypeScript 开发 Node.j 应用.md","filePath":"posts/frontEnd/109-TypeScript 入门实战笔记文档/(7450) 18  手把手教你使用 TypeScript 开发 Node.j 应用.md","lastUpdated":1718371218000}'),e={name:"posts/frontEnd/109-TypeScript 入门实战笔记文档/(7450) 18  手把手教你使用 TypeScript 开发 Node.j 应用.md"},E=t("",68),r=s("p",null,[i("在实际的开发过程中，我们肯定会碰到各种错误，不可能那么顺利。"),s("strong",null,"因此，在定位错误时，我们除了可以结合之前介绍的 TypeScript 常见错误等实用技能之外，还可以通过 VS Code 免转译直接调试源码。")],-1),d=s("p",null,[s("strong",null,"下面我们一起看看如何使用 VS Code 调试源码。")],-1),g=s("h4",{id:"使用-vs-code-调试",tabindex:"-1"},[i("使用 VS Code 调试 "),s("a",{class:"header-anchor",href:"#使用-vs-code-调试","aria-label":'Permalink to "使用 VS Code 调试"'},"​")],-1),o=s("p",null,"首先，我们需要给当前项目创建一个配置文件，具体操作方法为通过 VS Code 左侧或者顶部菜单 Run 选项添加或在 .vscode 目录中手动添加 launch.json，如图例所示：",-1),y=t("",4),c=t("",38);function F(u,C,B,b,v,m){const a=h("Image");return k(),l("div",null,[E,n(a,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image6/M00/49/B6/CioPOWDcIQOAK0rcAAIAVQXojdE355.png"}),i(),r,d,g,o,n(a,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image6/M00/49/AD/Cgp9HWDcIQqAemuKAAwOfFNd21o140.png"}),i(),y,n(a,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image6/M00/49/AD/Cgp9HWDcIRKAFCLmAAdLT9Jo0xw822.png"}),i(),c])}const q=p(e,[["render",F]]);export{A as __pageData,q as default};
