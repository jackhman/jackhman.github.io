import{_ as p,F as t,g as k,K as a,h as n,ar as h,l as s,o as l}from"./chunks/framework.VlluEs-f.js";const m=JSON.parse('{"title":"12反序列化漏洞：数据转换下的欺骗","description":"","frontmatter":{},"headers":[],"relativePath":"posts/devops/Web 安全攻防之道_文档/(5980) 12  反序列化漏洞：数据转换下的欺骗.md","filePath":"posts/devops/Web 安全攻防之道_文档/(5980) 12  反序列化漏洞：数据转换下的欺骗.md","lastUpdated":1718371218000}'),e={name:"posts/devops/Web 安全攻防之道_文档/(5980) 12  反序列化漏洞：数据转换下的欺骗.md"},E=h("",49),r=h("",14),d=s("p",null,"图 2 调用链",-1),g=s("p",null,[s("strong",null,"3. 寻找可控制第 1 步方法的参数的其他类方法函数。")],-1),y=s("p",null,"这里需要控制的是 file_get_contents($value) 中的参数 $value，依次往上追溯，发现其来自数组中的一个元素值，得到如下传播路径：",-1),F=s("p",null,"图 3 参数传播路径",-1),c=s("p",null,"为了对应 Show::__toString() 中的 $this->str['str']->source ，我们可以通过array('source'=>'可控内容') 来控制 $value，即打算读取的文件路径。进一步优化下传播路径：",-1),o=h("",51);function u(C,A,D,B,_,b){const i=t("Image");return l(),k("div",null,[E,a(i,{alt:"Lark20210121-180531.png",src:"https://s0.lgstatic.com/i/image/M00/8F/E1/Ciqc1GAJUtSAOq4oAAFC9pGx2M8332.png"}),n(),r,a(i,{alt:"Lark20210121-180537.png",src:"https://s0.lgstatic.com/i/image/M00/8F/EC/CgqCHmAJUuyAZXQKAAB855K4LBk536.png"}),n(),d,g,y,a(i,{alt:"Lark20210121-180540.png",src:"https://s0.lgstatic.com/i/image/M00/8F/E1/Ciqc1GAJUvSAaqlFAAB9jR92PEM612.png"}),n(),F,c,a(i,{alt:"Lark20210121-180543.png",src:"https://s0.lgstatic.com/i/image/M00/8F/E1/Ciqc1GAJUvuASTMYAAB-HQ644z0682.png"}),n(),o])}const q=p(e,[["render",u]]);export{m as __pageData,q as default};
