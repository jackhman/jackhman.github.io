import{_ as h,F as e,g as l,K as a,h as s,l as n,ar as t,o as k}from"./chunks/framework.VlluEs-f.js";const x=JSON.parse('{"title":"22执行引擎：如何把握ShardingSphere中的Executor执行模型？（上）","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/ShardingSphere 核心原理精讲_文档/(3581) 22  执行引擎：如何把握 ShardingSphere 中的 Executor 执行模型？（上）.md","filePath":"posts/backEnd/ShardingSphere 核心原理精讲_文档/(3581) 22  执行引擎：如何把握 ShardingSphere 中的 Executor 执行模型？（上）.md","lastUpdated":1718371218000}'),p={name:"posts/backEnd/ShardingSphere 核心原理精讲_文档/(3581) 22  执行引擎：如何把握 ShardingSphere 中的 Executor 执行模型？（上）.md"},E=n("h1",{id:"_22执行引擎-如何把握shardingsphere中的executor执行模型-上",tabindex:"-1"},[s("22执行引擎：如何把握ShardingSphere中的Executor执行模型？（上） "),n("a",{class:"header-anchor",href:"#_22执行引擎-如何把握shardingsphere中的executor执行模型-上","aria-label":'Permalink to "22执行引擎：如何把握ShardingSphere中的Executor执行模型？（上）"'},"​")],-1),r=n("p",null,"在上一课时中，我们对 ShardingGroupExecuteCallback 和 SQLExecuteTemplate 做了介绍。从设计上讲，前者充当 ShardingExecuteEngine 的回调入口；而后者则是一个模板类，完成对 ShardingExecuteEngine 的封装并提供了对外的统一入口，这些类都位于底层的 sharding-core-execute 工程中。",-1),d=t("",16),g=t("",28),y=t("",42);function c(o,F,u,A,D,C){const i=e("Image");return k(),l("div",null,[E,r,a(i,{alt:"image.png",src:"https://s0.lgstatic.com/i/image/M00/47/4A/CgqCHl9HalOAccqPAACp0Ky_Tl8886.png"}),s(),d,a(i,{alt:"image (1).png",src:"https://s0.lgstatic.com/i/image/M00/47/3F/Ciqc1F9HamWACCzmAABPdP2Sna8714.png"}),s(),g,a(i,{alt:"image (2).png",src:"https://s0.lgstatic.com/i/image/M00/47/3F/Ciqc1F9HaoaAYskMAACJIb5G6C8859.png"}),s(),y])}const b=h(p,[["render",c]]);export{x as __pageData,b as default};
