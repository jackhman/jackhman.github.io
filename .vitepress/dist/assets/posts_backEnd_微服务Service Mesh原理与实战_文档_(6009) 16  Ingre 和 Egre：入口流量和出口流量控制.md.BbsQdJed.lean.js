import{_ as t,F as k,g as l,K as i,h as a,ar as h,l as n,o as p}from"./chunks/framework.VlluEs-f.js";const B=JSON.parse('{"title":"16Ingre和Egre：入口流量和出口流量控制","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/微服务Service Mesh原理与实战_文档/(6009) 16  Ingre 和 Egre：入口流量和出口流量控制.md","filePath":"posts/backEnd/微服务Service Mesh原理与实战_文档/(6009) 16  Ingre 和 Egre：入口流量和出口流量控制.md","lastUpdated":1718371218000}'),e={name:"posts/backEnd/微服务Service Mesh原理与实战_文档/(6009) 16  Ingre 和 Egre：入口流量和出口流量控制.md"},E=h("",22),r=h("",65),d=h("",31),g=n("p",null,"今天我们学习了一种全新的设计模式：Egress，Egress 最基本的功能是做出口流量的权限控制。其实通过 Envoy 的强大七层代理实现的 Egress Gateway 可以实现很多功能，在实际项目中我就通过 Egress Gateway 提升了外部服务访问的性能，那么在你的经验里 Egress Gateway 还有哪些应用场景呢? 欢迎在留言区和我分享你的观点。",-1),y=n("p",null,"今天内容到这里就结束了，下一讲我会讲解如何在 Istio 中完成金丝雀发布：金丝雀部署和版本控制。我们下一讲再见！",-1);function F(o,c,D,A,C,u){const s=k("Image");return p(),l("div",null,[E,i(s,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image6/M00/04/29/CioPOWAikmiAcbONAACHq-N5-0s752.png"}),a(),r,i(s,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image6/M00/04/2D/Cgp9HWAikpmAQQN3AAP80pyzQ1o891.png"}),a(),d,i(s,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image6/M00/04/2D/Cgp9HWAikquAESGWAAGAzMGoHMY346.png"}),a(),g,y])}const v=t(e,[["render",F]]);export{B as __pageData,v as default};
