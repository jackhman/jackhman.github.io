import{_ as e,F as a,g as o,K as s,h as n,ar as i,l as t,o as p}from"./chunks/framework.VlluEs-f.js";const At=JSON.parse('{"title":"11限流与熔断：Sentinel在项目中的最佳实践","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/SpringCloud Alibaba 实战_文档/(6756) 11  限流与熔断：Sentinel 在项目中的最佳实践.md","filePath":"posts/backEnd/SpringCloud Alibaba 实战_文档/(6756) 11  限流与熔断：Sentinel 在项目中的最佳实践.md","lastUpdated":1718371218000}'),r={name:"posts/backEnd/SpringCloud Alibaba 实战_文档/(6756) 11  限流与熔断：Sentinel 在项目中的最佳实践.md"},c=i("",13),_=t("p",null,"Sentinel Core 向 Dashboard 建立连接",-1),h=t("p",null,"在 Sentinel Dashboard 接收到心跳包后，来自 Sentinel Core的AppName、IP、端口信息会被封装为 MachineInfo 对象放入 ConcurrentHashMap 保存在 JVM的内存中，以备后续使用。",-1),d=t("p",null,[t("strong",null,"第二步，推送新规则。")],-1),g=t("p",null,"如果在 Dashboard 页面中设置了新的保护规则，会先从当前的 MachineInfo 中提取符合要求的微服务实例信息，之后通过 Dashboard内置的 transport 模块将新规则打包推送到微服务实例的 Sentinel Core，Sentinel Core收 到新规则在微服务应用中对本地规则进行更新，这些新规则会保存在微服务实例的 JVM 内存中。",-1),u=t("p",null,"Sentinel Dashboard 向Sentinel Core推送新规则",-1),S=t("p",null,[t("strong",null,"第三步，处理请求。")],-1),A=t("p",null,'Sentinel Core 为服务限流、熔断提供了核心拦截器 SentinelWebInterceptor，这个拦截器默认对所有请求 /** 进行拦截，然后开始请求的链式处理流程，在对于每一个处理请求的节点被称为 Slot（槽），通过多个槽的连接形成处理链，在请求的流转过程中，如果有任何一个 Slot 验证未通过，都会产生 BlockException，请求处理链便会中断，并返回"Blocked by sentinel" 异常信息。',-1),m=i("",10),b=t("p",null,"滑动窗口算法",-1),k=t("h4",{id:"基于-sentinel-dashboard-的限流设置",tabindex:"-1"},[n("基于 Sentinel Dashboard 的限流设置 "),t("a",{class:"header-anchor",href:"#基于-sentinel-dashboard-的限流设置","aria-label":'Permalink to "基于 Sentinel Dashboard 的限流设置"'},"​")],-1),C=t("p",null,'在 Sentinel Dashboard 中"簇点链路",找到需要限流的 URI，点击"+流控"进入流控设置。小提示，sentinel-dashboard 基于懒加载模式，如果在簇点链路没有找到对应的 URI，需要先访问下这个功能的功能后对应的 URI 便会出现。',-1),P=t("p",null,"流控设置界面",-1),E=t("p",null,"流控规则项目说明主要有以下几点。",-1),D=t("ul",null,[t("li",null,[t("p",null,'资源名：要流控的 URI，在 Sentinel 中 URI 被称为"资源"；')]),t("li",null,[t("p",null,"针对来源：默认 default 代表所有来源，可以针对某个微服务或者调用者单独设置；")]),t("li",null,[t("p",null,"阈值类型：是按每秒访问数量（QPS）还是并发数（线程数）进行流控；")]),t("li",null,[t("p",null,"单机阈值：具体限流的数值是多少。")])],-1),B=t("p",null,"默认流控规则",-1),T=t("p",null,'点击对话框中的"高级选项"，就会出现更为详细的设置项。',-1),q=t("p",null,"其中流控模式是指采用什么方式进行流量控制。Sentinel支持三种模式：直接、关联、链路，下面咱们分别讲解这三种模式。",-1),M=t("ul",null,[t("li",null,[t("strong",null,"直接模式：")])],-1),I=t("p",null,'以下图为例，当 List 接口 QPS 超过 1个时限流，浏览器会出现"Blocked by Sentinel"。',-1),W=t("p",null,"流控模式-直接",-1),x=t("ul",null,[t("li",null,[t("strong",null,"关联模式：")])],-1),y=t("p",null,'如下图所示，当同 List 接口关联的update 接口 QPS 超过 1 时，再次访问List 接口便会响应"Blocked by Sentinel"。',-1),f=t("p",null,"流控模式-关联",-1),O=t("ul",null,[t("li",null,[t("strong",null,"链路模式：")])],-1),Q=t("p",null,[n('链路模式相对复杂，我们举例说明，现在某公司开发了一个单机的电商系统，为了满足完成"下订单"的业务，程序代码会依次执行'),t("strong",null,"订单创建方法->减少库存方法->微信支付方法->短信发送"),n("方法。方法像链条一样从前向后依次执行，这种执行的链条被称为调用链路，而链路模式限流就是为此而生。")],-1),V=t("p",null,"以下图为例，在某个微服务中 List 接口，会被 Check 接口调用。在另一个业务，List 接口也会被 Scan 接口调用。",-1),L=t("p",null,"调用链路",-1),U=t("p",null,'但如果按下图配置，将入口资源设为"/check"，则只会针对 check 接口的调用链路生效。当访问 check 接口的QPS 超过 1 时，List 接口就会被限流。而另一条链路从 scan 接口到List 接口的链路则不会受到任何影响。链路模式与关联模式最大的区别是 check 接口与 List 接口必须是在同一个调用链路中才会限流，而关联模式是任意两个资源只要设置关联就可以进行限流。',-1),N=i("",5),R=t("p",null,"流控效果-快速失败",-1),F=t("ul",null,[t("li",null,[t("strong",null,"Warm Up（预热）：")])],-1),Y=t("p",null,"Warm Up 用于应对瞬时大并发流量冲击。当遇到突发大流量 Warm Up 会缓慢拉升阈值限制，预防系统瞬时崩溃，这期间超出阈值的访问处于队列等待状态，并不会立即抛出 BlockException。",-1),v=t("p",null,"如下图所示，List 接口平时单机阈值 QPS 处于低水位：默认为 1000/3 (冷加载因子)≈333，当瞬时大流量进来，10 秒钟内将 QPS 阈值逐渐拉升至 1000，为系统留出缓冲时间，预防突发性系统崩溃。",-1),H=i("",5),w=i("",9),K=t("p",null,"Sentinel 熔断机制",-1),J=t("h4",{id:"基于sentineldashboard的熔断设置",tabindex:"-1"},[t("strong",null,"基于SentinelDashboard的熔断设置"),n(),t("a",{class:"header-anchor",href:"#基于sentineldashboard的熔断设置","aria-label":'Permalink to "**基于SentinelDashboard的熔断设置**"'},"​")],-1),j=t("p",null,"Sentinel Dashboard可以设置三种不同的熔断模式：慢调用比例、异常比例、异常数，下面我们分别讲解：",-1),z=t("ul",null,[t("li",null,'慢调用比例是指当接口在1秒内"慢处理"数量超过一定比例，则触发熔断。')],-1),$=t("p",null,"熔断模式-慢调用比例",-1),X=t("p",null,'结合上图的设置，介绍下"慢调用比例"熔断规则。',-1),Z=t("ul",null,[t("li",null,"异常比例是指 1 秒内按接口调用产生异常的比例（异常调用数/总数量）触发熔断。")],-1),G=t("p",null,"熔断模式-异常比例",-1),tt=t("p",null,'结合上图的设置，介绍下"异常比例"熔断规则。',-1),nt=t("ul",null,[t("li",null,"异常数是指在 1 分钟内异常的数量超过阈值则触发熔断。")],-1),lt=t("p",null,"熔断模式-异常数",-1),st=t("p",null,'结合上图的设置，介绍下"异常数"熔断规则。',-1),it=t("p",null,"以上就是三种熔断模式的介绍，熔断相对流控配置比较简单，只需要设置熔断检查开启条件与触发熔断条件即可。讲到这关于限流与熔断的配置暂时告一段落，下面对本讲内容进行下总结。",-1),et=t("h3",{id:"小结与预告",tabindex:"-1"},[n("小结与预告 "),t("a",{class:"header-anchor",href:"#小结与预告","aria-label":'Permalink to "小结与预告"'},"​")],-1),at=t("p",null,"本讲咱们介绍了三部分内容，第一部分讲解了 Sentinel Dashboard 与 Sentinel Core的通信机制与执行原理，了解 Sentinel Core 是通过拦截器实现了限流与熔断；第二部分讲解了滑动窗口算法与 Dashboard 流控配置的每一种情况；第三部分讲解了熔断机制与 Dashboard 的熔断配置。",-1),ot=t("p",null,"这里留一个讨论话题：假如你遇到像春运 12306 热门车次购票这种高并发场景，为了保证应用的稳定和用户的体验，我们要采取哪些措施呢？可以把你的经验写在评论中，咱们一起探讨。",-1),pt=t("p",null,"下一讲，将进入生产集群保护这个话题，看 Sentinel 是如何对整个服务集群实施保护的。",-1);function rt(ct,_t,ht,dt,gt,ut){const l=a("Image");return p(),o("div",null,[c,s(l,{alt:"图片1.png",src:"https://s0.lgstatic.com/i/image6/M00/26/25/CioPOWBarxyAfxg4AAEytt3cAkM947.png"}),n(),_,h,d,g,s(l,{alt:"图片22.png",src:"https://s0.lgstatic.com/i/image6/M00/26/28/Cgp9HWBaryuANUd3AAFKoecEXLU156.png"}),n(),u,S,A,s(l,{alt:"图片2.png",src:"https://s0.lgstatic.com/i/image6/M00/26/25/CioPOWBarziAOzV2AAFkVrbLros829.png"}),n(),m,s(l,{alt:"图片4.png",src:"https://s0.lgstatic.com/i/image6/M00/26/25/CioPOWBar0iAFl_9AASda6g75YE021.png"}),n(),b,k,C,s(l,{alt:"图片5.png",src:"https://s0.lgstatic.com/i/image6/M00/26/28/Cgp9HWBar1OAG6JAAAKivJHK_-k419.png"}),n(),P,E,D,s(l,{alt:"图片6.png",src:"https://s0.lgstatic.com/i/image6/M00/26/28/Cgp9HWBar16Abbz2AAOQnjLspDY532.png"}),n(),B,T,q,M,I,s(l,{alt:"图片7.png",src:"https://s0.lgstatic.com/i/image6/M00/26/28/Cgp9HWBar4CARQwVAAEmI2EpwUs844.png"}),n(),W,x,y,s(l,{alt:"图片8.png",src:"https://s0.lgstatic.com/i/image6/M00/26/25/CioPOWBar4qAaeVSAAEgPLPCgYU751.png"}),n(),f,O,Q,V,s(l,{alt:"图片99.png",src:"https://s0.lgstatic.com/i/image6/M00/26/28/Cgp9HWBar5qAQ8kxAAB6_MghZFM405.png"}),n(),L,U,s(l,{alt:"图片9.png",src:"https://s0.lgstatic.com/i/image6/M01/26/25/CioPOWBar6SAU6wQAAFdYOUQcEQ336.png"}),n(),N,s(l,{alt:"图片11.png",src:"https://s0.lgstatic.com/i/image6/M01/26/29/Cgp9HWBar7CAPY7AAAGALPdbIwo406.png"}),n(),R,F,Y,v,s(l,{alt:"图片12.png",src:"https://s0.lgstatic.com/i/image6/M01/26/25/CioPOWBar76AYECLAAKiRTkN46w430.png"}),n(),H,s(l,{alt:"图片13.png",src:"https://s0.lgstatic.com/i/image6/M01/26/25/CioPOWBar8mAA3X_AAFbifYRYio573.png"}),n(),w,s(l,{alt:"图片14.png",src:"https://s0.lgstatic.com/i/image6/M01/26/25/CioPOWBar9OAT7iIAADpMfE3-dw738.png"}),n(),K,J,j,z,s(l,{alt:"图片15.png",src:"https://s0.lgstatic.com/i/image6/M01/26/25/CioPOWBar92AAT0jAAHYZ6NDKjQ113.png"}),n(),$,X,s(l,{alt:"图片18.png",src:"https://s0.lgstatic.com/i/image6/M01/26/25/CioPOWBar-qACeUjAALQjoYzEvE265.png"}),n(),Z,s(l,{alt:"图片16.png",src:"https://s0.lgstatic.com/i/image6/M01/26/29/Cgp9HWBar_SAOTw9AAFxRASYnnE809.png"}),n(),G,tt,s(l,{alt:"图片19.png",src:"https://s0.lgstatic.com/i/image6/M01/26/26/CioPOWBar_6AXJmYAAK3pfImZs4903.png"}),n(),nt,s(l,{alt:"图片17.png",src:"https://s0.lgstatic.com/i/image6/M01/26/29/Cgp9HWBasAmAO9LnAAFiqbTOxTs071.png"}),n(),lt,st,s(l,{alt:"图片20.png",src:"https://s0.lgstatic.com/i/image6/M00/26/26/CioPOWBasBOAY3wPAALTmvi2q7s202.png"}),n(),it,et,at,ot,pt])}const mt=e(r,[["render",rt]]);export{At as __pageData,mt as default};
