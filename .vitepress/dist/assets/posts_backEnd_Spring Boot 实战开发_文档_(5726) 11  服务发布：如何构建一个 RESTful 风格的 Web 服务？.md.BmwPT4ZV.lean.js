import{_ as t,F as h,g as l,K as a,h as n,ar as p,l as s,o as k}from"./chunks/framework.VlluEs-f.js";const T=JSON.parse('{"title":"11服务发布：如何构建一个RESTful风格的Web服务？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Spring Boot 实战开发_文档/(5726) 11  服务发布：如何构建一个 RESTful 风格的 Web 服务？.md","filePath":"posts/backEnd/Spring Boot 实战开发_文档/(5726) 11  服务发布：如何构建一个 RESTful 风格的 Web 服务？.md","lastUpdated":1718371218000}'),e={name:"posts/backEnd/Spring Boot 实战开发_文档/(5726) 11  服务发布：如何构建一个 RESTful 风格的 Web 服务？.md"},E=p("",8),r=p("",12),d=p("",40),g=s("p",null,"使用 Postman 输入 JSON 字符串发起 HTTP 请求示例图",-1),c=s("p",null,"通过以上内容的讲解，我们发现使用注解的操作很简单，接下来我们有必要探讨下控制请求输入的规则。",-1),y=s("p",null,[s("strong",null,"关于控制请求输入的规则，关键在于按照 RESTful 风格的设计原则设计 HTTP 端点，对于这点业界也存在一些约定。")],-1),o=s("ul",null,[s("li",null,[s("p",null,'以 Account 这个领域实体为例，如果我们把它视为一种资源，那么 HTTP 端点的根节点命名上通常采用复数形式，即"/accounts"，正如前面的示例代码所示。')]),s("li",null,[s("p",null,"在设计 RESTful API 时，我们需要基于 HTTP 语义设计对外暴露的端点的详细路径。针对常见的 CRUD 操作，我们展示了 RESTful API 与非 RESTful API 的一些区别。")])],-1),u=p("",13);function F(A,C,D,B,b,v){const i=h("Image");return k(),l("div",null,[E,a(i,{alt:"图片6 (1).png",src:"https://s0.lgstatic.com/i/image2/M01/03/C1/CgpVE1_hv2uAGbTPAABvOdgwGhs113.png"}),n(),r,a(i,{alt:"图片1 (2).png",src:"https://s0.lgstatic.com/i/image2/M01/03/C0/Cip5yF_hv3eAbVtLAAGhaTfDT5s664.png"}),n(),d,a(i,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image2/M01/01/5C/Cip5yF_YgIGACIM7AAAr5-G8i7M764.png"}),n(),g,c,y,o,a(i,{alt:"图片3 (1).png",src:"https://s0.lgstatic.com/i/image/M00/8B/E8/CgqCHl_hv5yAPnDHAADI8geMxRU064.png"}),n(),u])}const q=t(e,[["render",F]]);export{T as __pageData,q as default};
