import{_ as l,F as e,g as h,K as t,h as i,ar as n,l as s,o as p}from"./chunks/framework.VlluEs-f.js";const M=JSON.parse('{"title":"第18讲：带你揭开toolkit-activation工具箱的秘密","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/098-讲带你搞懂 SkyWalking文档/(1736) 第18讲：带你揭开 toolkit-activation 工具箱的秘密.md","filePath":"posts/backEnd/098-讲带你搞懂 SkyWalking文档/(1736) 第18讲：带你揭开 toolkit-activation 工具箱的秘密.md","lastUpdated":1718371218000}'),k={name:"posts/backEnd/098-讲带你搞懂 SkyWalking文档/(1736) 第18讲：带你揭开 toolkit-activation 工具箱的秘密.md"},r=n("",9),E=s("p",null,"点击该 Span，可以看到具体的 Tag 信息以及 Log 信息，如下图所示：",-1),g=s("h4",{id:"深入工具类原理",tabindex:"-1"},[i("深入工具类原理 "),s("a",{class:"header-anchor",href:"#深入工具类原理","aria-label":'Permalink to "深入工具类原理"'},"​")],-1),o=s("p",null,"了解了 @Trace 注解的使用之后，我们来分析其底层实现。首先我们跳转到 SkyWalking 项目的 apm-toolkit-trace 模块，如下图所示：",-1),d=s("p",null,"该模块就有前面使用到的 @Trace 注解以及 ActiveSpan、TraceContext 工具类，打开这两个工具类会发现，全部是空实现，那添加 Tag、获取 Trace ID 等操作是如何完成的呢？我在前面介绍 SkyWalking 源码各个模块功能时提到，apm-application-toolkit 模块类似于暴露 API 定义，对应的处理逻辑在 apm-sniffer/apm-toolkit-activation 模块中实现。",-1),c=s("p",null,"在 apm-toolkit-trace-activation 模块的 skywalking-plugin.def 文件中定义了四个 ClassEnhancePluginDefine 实现类：",-1),y=s("ul",null,[s("li",null,"ActiveSpanActivation"),s("li",null,"TraceAnnotationActivation"),s("li",null,"TraceContextActivation"),s("li",null,"CallableOrRunnableActivation")],-1),F=s("p",null,"这四个 ClassEnhancePluginDefine 实现类的继承关系如下图所示：",-1),u=n("",6),A=n("",5),C=s("p",null,"除了通过 RunnableWrapper 包装 Runnable 之外，我们可以通过 CallableWrapper 包装 Callable 实现 Trace 的跨线程传播。下图展示了 Trace 信息跨线程传播的核心原理：",-1),v=n("",14),b=n("",4),D=n("",4),m=n("",12),_=n("",17);function T(B,L,q,S,x,f){const a=e("Image");return p(),h("div",null,[r,t(a,{alt:"image.png",src:"https://s0.lgstatic.com/i/image/M00/04/26/CgqCHl6zvL-AJxsiAALX11rEFcE040.png"}),i(),E,t(a,{alt:"image (1).png",src:"https://s0.lgstatic.com/i/image/M00/04/26/Ciqc1F6zvMeAIijwAAG4HeGpP1w020.png"}),i(),g,o,t(a,{alt:"image (2).png",src:"https://s0.lgstatic.com/i/image/M00/04/26/CgqCHl6zvNCANNntAAF2iT3mNig327.png"}),i(),d,c,y,F,t(a,{alt:"image (3).png",src:"https://s0.lgstatic.com/i/image/M00/04/26/CgqCHl6zvNmAEeMhAAHH-Xli_I8395.png"}),i(),u,t(a,{alt:"image (4).png",src:"https://s0.lgstatic.com/i/image/M00/04/26/CgqCHl6zvOSAJMFjAAIONP7amFM561.png"}),i(),A,t(a,{alt:"跨线程传播.png",src:"https://s0.lgstatic.com/i/image/M00/04/26/Ciqc1F6zvO-AEq9VAAFo-ZWXkGM186.png"}),i(),C,t(a,{alt:"image (5).png",src:"https://s0.lgstatic.com/i/image/M00/04/26/Ciqc1F6zvPqAKHZ1AAFedhJrbC8809.png"}),i(),v,t(a,{alt:"image (6).png",src:"https://s0.lgstatic.com/i/image/M00/04/26/CgqCHl6zvQeAdq60AAJd-oywE_o373.png"}),i(),b,t(a,{alt:"image (7).png",src:"https://s0.lgstatic.com/i/image/M00/04/26/Ciqc1F6zvRKAMCK4AAHOkonOBic764.png"}),i(),D,t(a,{alt:"image (8).png",src:"https://s0.lgstatic.com/i/image/M00/04/26/Ciqc1F6zvRqAVReiAAEEjIqgllA872.png"}),i(),m,t(a,{alt:"image (9).png",src:"https://s0.lgstatic.com/i/image/M00/04/26/CgqCHl6zvSWAA-ZRAAB1DP_LB58112.png"}),i(),_])}const P=l(k,[["render",T]]);export{M as __pageData,P as default};
