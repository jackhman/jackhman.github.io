import{_ as l,F as h,g as p,K as t,h as i,l as s,ar as n,o as e}from"./chunks/framework.VlluEs-f.js";const _=JSON.parse('{"title":"04JMeter二次开发其实并不难","description":"","frontmatter":{},"headers":[],"relativePath":"posts/devops/047_说透性能测试/(6155) 04  JMeter 二次开发其实并不难.md","filePath":"posts/devops/047_说透性能测试/(6155) 04  JMeter 二次开发其实并不难.md","lastUpdated":1718371218000}'),k={name:"posts/devops/047_说透性能测试/(6155) 04  JMeter 二次开发其实并不难.md"},r=s("h1",{id:"_04jmeter二次开发其实并不难",tabindex:"-1"},[i("04JMeter二次开发其实并不难 "),s("a",{class:"header-anchor",href:"#_04jmeter二次开发其实并不难","aria-label":'Permalink to "04JMeter二次开发其实并不难"'},"​")],-1),E=s("p",null,"上一讲我们通过学习 JMeter 的脚本编写方式和执行方式，掌握了如何让 JMeter 更加有效地运行，其技术思路是使用 JMeter 本身或者社区提供的现成方案去实现，这基本已经满足了绝大多数性能测试的需求。",-1),d=s("p",null,"随着互联网行业发展，各种技术方案层出不穷，但是任何方案都不是万能的，有些需求是要我们自己写代码去实现的，JMeter 也留了相应的入口便于我们编写代码，所以本讲将介绍三种插件编写方式：",-1),g=s("ul",null,[s("li",null,[s("p",null,"自定义 BeanShell 功能")]),s("li",null,[s("p",null,"自定义请求编写（Java Sampler）")]),s("li",null,[s("p",null,"自定义函数助手")])],-1),o=n("",55),y=n("",4),c=n("",8),u=n("",10);function F(v,m,A,C,b,D){const a=h("Image");return e(),p("div",null,[r,E,d,g,t(a,{alt:"Lark20210118-174730.png",src:"https://s0.lgstatic.com/i/image2/M01/06/91/Cip5yGAFWiKADSIlAAEajo52AJ8631.png"}),i(),o,t(a,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image2/M01/06/8C/Cip5yGAFPAKAEmBcAAB8OFXAQYo399.png"}),i(),y,t(a,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image2/M01/06/8C/Cip5yGAFPBOAecdTAAC22dYxB2Q653.png"}),i(),c,t(a,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image2/M01/06/8C/Cip5yGAFPB6ADKzZAAB86ItSH7Q951.png"}),i(),u])}const S=l(k,[["render",F]]);export{_ as __pageData,S as default};
