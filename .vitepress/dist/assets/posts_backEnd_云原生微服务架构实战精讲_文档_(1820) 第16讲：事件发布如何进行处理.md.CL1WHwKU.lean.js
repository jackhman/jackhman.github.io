import{_ as t,F as p,g as l,K as i,h as a,ar as n,l as h,o as k}from"./chunks/framework.VlluEs-f.js";const B=JSON.parse('{"title":"第16讲：事件发布如何进行处理","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/云原生微服务架构实战精讲_文档/(1820) 第16讲：事件发布如何进行处理.md","filePath":"posts/backEnd/云原生微服务架构实战精讲_文档/(1820) 第16讲：事件发布如何进行处理.md","lastUpdated":1718371218000}'),e={name:"posts/backEnd/云原生微服务架构实战精讲_文档/(1820) 第16讲：事件发布如何进行处理.md"},E=n("",15),r=n("",9),d=n("",5),g=n("",12),y=h("p",null,"CommandProducer 接口的实现在发送命令时，也创建出了对应的 Message 对象，只不过消息的头中包含的内容不同。消息的目的地是发送命令时指定的通道。",-1),o=h("p",null,"处理命令的工作由 CommandDispatcher 类来完成。CommandDispatcher 类使用 MessageConsumer 接口来接收消息，同时使用 MessageProducer 接口来发送命令的回应消息。对命令的处理逻辑由 CommandHandlers 类来声明，CommandHandlers 对象包含一个 CommandHandler 对象的列表。CommandHandler 类的构造器参数如下表所示。",-1),c=n("",18);function F(u,C,m,D,A,v){const s=p("Image");return k(),l("div",null,[E,i(s,{alt:"图片1.png",src:"https://s0.lgstatic.com/i/image/M00/05/10/Ciqc1F61D6CAO4KzAABli67iqXE659.png"}),a(),r,i(s,{alt:"图片2.png",src:"https://s0.lgstatic.com/i/image/M00/05/10/CgqCHl61D6qAcPRVAABn48Vm_Jg675.png"}),a(),d,i(s,{alt:"图片3.png",src:"https://s0.lgstatic.com/i/image/M00/05/10/Ciqc1F61D7OAWnOpAABXlUMXYqQ008.png"}),a(),g,i(s,{alt:"图片4.png",src:"https://s0.lgstatic.com/i/image/M00/05/10/Ciqc1F61D7-AL0sGAAByUNtml8M088.png"}),a(),y,o,i(s,{alt:"图片5.png",src:"https://s0.lgstatic.com/i/image/M00/05/10/Ciqc1F61D8aAfwZnAABq7-bDGO0896.png"}),a(),c])}const b=t(e,[["render",F]]);export{B as __pageData,b as default};
