import{_ as e,F as p,g as l,K as n,h as s,ar as h,l as i,o as t}from"./chunks/framework.VlluEs-f.js";const T=JSON.parse('{"title":"13微内核架构：ShardingSphere如何实现系统的扩展性？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/ShardingSphere 核心原理精讲_文档/(3572) 13  微内核架构：ShardingSphere 如何实现系统的扩展性？.md","filePath":"posts/backEnd/ShardingSphere 核心原理精讲_文档/(3572) 13  微内核架构：ShardingSphere 如何实现系统的扩展性？.md","lastUpdated":1718371218000}'),k={name:"posts/backEnd/ShardingSphere 核心原理精讲_文档/(3572) 13  微内核架构：ShardingSphere 如何实现系统的扩展性？.md"},r=h("",8),E=i("p",null,"微内核架构模式为这种实现扩展性的思路提供了架构设计上的支持，ShardingSphere 基于微内核架构实现了高度的扩展性。在介绍如何实现微内核架构之前，我们先对微内核架构的具体组成结构和基本原理做简要的阐述。",-1),d=i("h4",{id:"什么是微内核架构-1",tabindex:"-1"},[s("什么是微内核架构？ "),i("a",{class:"header-anchor",href:"#什么是微内核架构-1","aria-label":'Permalink to "什么是微内核架构？"'},"​")],-1),g=i("p",null,[s("从组成结构上讲， "),i("strong",null,"微内核架构包含两部分组件：内核系统和插件"),s(" 。这里的内核系统通常提供系统运行所需的最小功能集，而插件是独立的组件，包含自定义的各种业务代码，用来向内核系统增强或扩展额外的业务能力。在 ShardingSphere 中，前面提到的分布式主键就是插件，而 ShardingSphere 的运行时环境构成了内核系统。")],-1),y=i("p",null,[s("那么这里的插件具体指的是什么呢？这就需要我们明确两个概念，一个概念就是经常在说的 "),i("strong",null,"API"),s(" ，这是系统对外暴露的接口。而另一个概念就是 "),i("strong",null,"SPI"),s("（Service Provider Interface，服务提供接口），这是插件自身所具备的扩展点。就两者的关系而言，API 面向业务开发人员，而 SPI 面向框架开发人员，两者共同构成了 ShardingSphere 本身。")],-1),c=h("",15),o=h("",22),F=i("p",null,"SQLParserEntry 实现类图",-1),S=i("p",null,"我们先来看针对 MySQL 的代码工程 shardingsphere-sql-parser-mysql，在 META-INF/services 目录下，我们找到了一个 org.apache.shardingsphere.sql.parser.spi.SQLParserEntry 文件:",-1),C=i("p",null,"MySQL 代码工程中的 SPI 配置",-1),A=i("p",null,"可以看到这里指向了 org.apache.shardingsphere.sql.parser.MySQLParserEntry 类。再来到 Oracle 的代码工程 shardingsphere-sql-parser-oracle，在 META-INF/services 目录下，同样找到了一个 org.apache.shardingsphere.sql.parser.spi.SQLParserEntry 文件：",-1),D=h("",12),v=h("",13);function u(_,B,P,b,I,m){const a=p("Image");return t(),l("div",null,[r,n(a,{alt:"image.png",src:"https://s0.lgstatic.com/i/image/M00/39/0C/CgqCHl8esVaAVlUFAACJmGjQZDA482.png"}),s(),E,d,g,n(a,{alt:"image (1).png",src:"https://s0.lgstatic.com/i/image/M00/39/0C/CgqCHl8esWOAJ-5cAACfxz06p_E616.png"}),s(),y,n(a,{alt:"image (2).png",src:"https://s0.lgstatic.com/i/image/M00/39/01/Ciqc1F8esXOADonEAACE9HEUTJc298.png"}),s(),c,n(a,{alt:"image (3).png",src:"https://s0.lgstatic.com/i/image/M00/39/01/Ciqc1F8esYqAdXABAADVVh6mYnA926.png"}),s(),o,n(a,{alt:"Drawing 4.png",src:"https://s0.lgstatic.com/i/image/M00/38/CB/Ciqc1F8ed26ANXCOAAArBJH3uDs890.png"}),s(),F,S,n(a,{alt:"Drawing 5.png",src:"https://s0.lgstatic.com/i/image/M00/38/D7/CgqCHl8ed3aABqWdAABTnSG89Jg177.png"}),s(),C,A,n(a,{alt:"Drawing 6.png",src:"https://s0.lgstatic.com/i/image/M00/38/CB/Ciqc1F8ed4GABKlZAABTzlYzJvc755.png"}),s(),D,n(a,{alt:"Drawing 7.png",src:"https://s0.lgstatic.com/i/image/M00/38/D9/CgqCHl8eekGAa88DAABIbz4-Q20783.png"}),s(),v])}const L=e(k,[["render",u]]);export{T as __pageData,L as default};
