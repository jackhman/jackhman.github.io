import{_ as p,F as h,g as e,K as t,h as i,ar as n,l as s,o as l}from"./chunks/framework.VlluEs-f.js";const m=JSON.parse('{"title":"29统一认证与授权如何保障服务安全？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Go 微服务实战 38 讲_文档/(3824) 29  统一认证与授权如何保障服务安全？.md","filePath":"posts/backEnd/Go 微服务实战 38 讲_文档/(3824) 29  统一认证与授权如何保障服务安全？.md","lastUpdated":1718371218000}'),k={name:"posts/backEnd/Go 微服务实战 38 讲_文档/(3824) 29  统一认证与授权如何保障服务安全？.md"},r=n("",26),o=s("p",null,[i("其中"),s("strong",null,"经常使用的授权类型为授权码类型和密码类型"),i('。简化类型是由于省略了授权码类型流程中的"授权码"步骤而得名；而客户端类型是客户端以自己的名义直接向授权服务器请求访问令牌，不需要用户授权即可请求访问令牌。')],-1),d=s("p",null,"我们接下来就只对常用的授权码类型和密码类型的流程做详细的介绍。",-1),g=s("p",null,[s("strong",null,"（1）授权码类型")],-1),c=s("p",null,"授权码类型是 OAuth2 默认授权类型中功能最完整、流程最严密的授权类型。授权码类型要求客户端能够与资源所有者的代理（如 Web 浏览器等）进行交互，它通过重定向资源所有者的代理，让资源所有者与授权服务器直接交互授权，避免资源所有者的信息被泄漏，并将授权通过后生成的授权码以重定向的方式返回给客户端。",-1),E=s("p",null,"其授权流程图如下图所示：",-1),u=n("",5),y=n("",21),A=n("",35);function _(F,b,C,D,T,S){const a=h("Image");return l(),e("div",null,[r,t(a,{alt:"1.png",src:"https://s0.lgstatic.com/i/image/M00/5B/A5/CgqCHl9_zxuAKzwlAACE5_eVSis959.png"}),i(),o,d,g,c,E,t(a,{alt:"2.png",src:"https://s0.lgstatic.com/i/image/M00/5B/A5/CgqCHl9_z1qAO1lbAACN7fUBGB4934.png"}),i(),u,t(a,{alt:"3.png",src:"https://s0.lgstatic.com/i/image/M00/5B/A6/CgqCHl9_z2aANQVaAACfSJf6Wpc520.png"}),i(),y,t(a,{alt:"4.png",src:"https://s0.lgstatic.com/i/image/M00/5B/A5/CgqCHl9_zyaAXi9uAAMQlnqNtDg368.png"}),i(),A])}const v=p(k,[["render",_]]);export{m as __pageData,v as default};
