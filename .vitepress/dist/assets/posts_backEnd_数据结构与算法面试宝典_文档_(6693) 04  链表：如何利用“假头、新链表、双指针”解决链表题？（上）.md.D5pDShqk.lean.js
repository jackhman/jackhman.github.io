import{_ as t,F as p,g as h,K as n,h as i,ar as l,l as s,o as e}from"./chunks/framework.VlluEs-f.js";const B=JSON.parse('{"title":"04链表：如何利用“假头、新链表、双指针”解决链表题？（上）","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/数据结构与算法面试宝典_文档/(6693) 04  链表：如何利用“假头、新链表、双指针”解决链表题？（上）.md","filePath":"posts/backEnd/数据结构与算法面试宝典_文档/(6693) 04  链表：如何利用“假头、新链表、双指针”解决链表题？（上）.md","lastUpdated":1718371218000}'),k={name:"posts/backEnd/数据结构与算法面试宝典_文档/(6693) 04  链表：如何利用“假头、新链表、双指针”解决链表题？（上）.md"},r=l("",32),d=s("p",null,[s("strong",null,"小测验"),i("：这里 tail 指针需要判断是否为空吗？")],-1),E=s("ul",null,[s("li",null,[s("p",null,"A. 需要")]),s("li",null,[s("p",null,"B. 不需要")])],-1),g=s("p",null,[s("strong",null,"正确答案 B")],-1),o=s("p",null,"带假头的链表初始化之后，可以保证 tail 指针永远非空，因此，也就可以直接去修改 tail.next 指针，省略掉了关于 tail 指针是否为空的判断。比如，空链表追加新结点时执行过程如下动图所示：",-1),y=l("",7),A=s("p",null,"这段代码有趣的地方在于，当链表为空的时候，它依然是可以工作的。因为虽然链表是空的，但是由于有 dummy 结点的存在，代码并不会遇到空指针，此时工作流程如下：",-1),c=l("",13),D=l("",16),u=l("",9),b=l("",7);function F(m,_,C,L,v,x){const a=p("Image");return e(),h("div",null,[r,n(a,{alt:"1.gif",src:"https://s0.lgstatic.com/i/image6/M00/17/CA/CioPOWBIMYOASGfSAAfGljWjNtw694.gif"}),i(),d,E,g,o,n(a,{alt:"2.gif",src:"https://s0.lgstatic.com/i/image6/M00/17/CD/Cgp9HWBIMZCAEHw5AAVk4Jb8MEs921.gif"}),i(),y,n(a,{alt:"3.gif",src:"https://s0.lgstatic.com/i/image6/M00/17/CD/Cgp9HWBIMZ2AEMTiAAoTgPIJPh8420.gif"}),i(),A,n(a,{alt:"4.gif",src:"https://s0.lgstatic.com/i/image6/M00/17/CD/Cgp9HWBIMaeAMwi6AAdLTcRFg2U490.gif"}),i(),c,n(a,{alt:"5.gif",src:"https://s0.lgstatic.com/i/image6/M00/17/CA/CioPOWBIMbWAZF4OAAuzYmMlByU170.gif"}),i(),D,n(a,{alt:"6.gif",src:"https://s0.lgstatic.com/i/image6/M00/17/CA/CioPOWBIMgiAGcwWAAeNIlv7KX0437.gif"}),i(),u,n(a,{alt:"Drawing 13.png",src:"https://s0.lgstatic.com/i/image6/M00/17/CA/CioPOWBIMhaAJYx8AADVb1uk2iI792.png"}),i(),b])}const q=t(k,[["render",F]]);export{B as __pageData,q as default};
