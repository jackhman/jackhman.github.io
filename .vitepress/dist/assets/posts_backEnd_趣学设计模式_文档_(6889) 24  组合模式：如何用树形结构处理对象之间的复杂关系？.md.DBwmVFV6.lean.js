import{_ as p,F as k,g as l,K as a,h as s,ar as n,l as h,o as t}from"./chunks/framework.VlluEs-f.js";const _=JSON.parse('{"title":"24组合模式：如何用树形结构处理对象之间的复杂关系？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/趣学设计模式_文档/(6889) 24  组合模式：如何用树形结构处理对象之间的复杂关系？.md","filePath":"posts/backEnd/趣学设计模式_文档/(6889) 24  组合模式：如何用树形结构处理对象之间的复杂关系？.md","lastUpdated":1718371218000}'),e={name:"posts/backEnd/趣学设计模式_文档/(6889) 24  组合模式：如何用树形结构处理对象之间的复杂关系？.md"},E=n("",8),r=n("",3),d=h("p",null,[s("除了树形结构以外，组合模式中还有"),h("strong",null,"环形结构"),s(" 和"),h("strong",null,"双向结构"),s("（如下图），其中，环形结构和数据结构中的单向链表很相似，而双向结构其实就是 Spring 中 Bean 常用的结构。")],-1),g=n("",10),y=n("",32);function F(c,o,A,D,C,u){const i=k("Image");return t(),l("div",null,[E,a(i,{alt:"image.png",src:"https://s0.lgstatic.com/i/image6/M00/43/22/CioPOWC3VjyAdaL-AABoXi-mYc0931.png"}),s(),r,a(i,{alt:"image (1).png",src:"https://s0.lgstatic.com/i/image6/M00/43/1A/Cgp9HWC3VkWAAa_UAACkaBZlf0E608.png"}),s(),d,a(i,{alt:"image (2).png",src:"https://s0.lgstatic.com/i/image6/M00/43/22/CioPOWC3Vk-AIZSUAAFRh5xYT_k955.png"}),s(),g,a(i,{alt:"image (3).png",src:"https://s0.lgstatic.com/i/image6/M00/43/1A/Cgp9HWC3VlqAYuyLAABhZFxXIQY493.png"}),s(),y])}const B=p(e,[["render",F]]);export{_ as __pageData,B as default};
