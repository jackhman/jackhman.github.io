import{_ as n,F as t,g as e,K as h,h as i,l as s,ar as p,o as l}from"./chunks/framework.VlluEs-f.js";const B=JSON.parse('{"title":"11WebFlux（下）：如何使用函数式编程模型构建异步非阻塞服务？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Spring 响应式编程实战_文档/(6993) 11  WebFlux（下）：如何使用函数式编程模型构建异步非阻塞服务？.md","filePath":"posts/backEnd/Spring 响应式编程实战_文档/(6993) 11  WebFlux（下）：如何使用函数式编程模型构建异步非阻塞服务？.md","lastUpdated":1718371218000}'),k={name:"posts/backEnd/Spring 响应式编程实战_文档/(6993) 11  WebFlux（下）：如何使用函数式编程模型构建异步非阻塞服务？.md"},r=s("h1",{id:"_11webflux-下-如何使用函数式编程模型构建异步非阻塞服务",tabindex:"-1"},[i("11WebFlux（下）：如何使用函数式编程模型构建异步非阻塞服务？ "),s("a",{class:"header-anchor",href:"#_11webflux-下-如何使用函数式编程模型构建异步非阻塞服务","aria-label":'Permalink to "11WebFlux（下）：如何使用函数式编程模型构建异步非阻塞服务？"'},"​")],-1),E=s("p",null,"上一讲，我们引入了 Spring 框架中专门用于构建响应式 Web 服务的 WebFlux 框架，同时我也给出了两种创建 RESTful 风格 HTTP 端点实现方法中的一种，即注解编程模型。今天，我将介绍另一种实现方法------如何使用函数式编程模型创建响应式 RESTful 服务，这种编程模型与传统的基于 Spring MVC 构建 RESTful 服务的方法有较大差别。",-1),d=s("h3",{id:"webflux-函数式编程模型",tabindex:"-1"},[i("WebFlux 函数式编程模型 "),s("a",{class:"header-anchor",href:"#webflux-函数式编程模型","aria-label":'Permalink to "WebFlux 函数式编程模型"'},"​")],-1),g=s("p",null,"在引入函数式编程模型之前，让我先带你回顾一下 Spring WebFlux 的系统架构图，如下所示。",-1),o=p("",62);function y(c,u,F,v,b,C){const a=t("Image");return l(),e("div",null,[r,E,d,g,h(a,{alt:"图片2.png",src:"https://s0.lgstatic.com/i/image6/M01/32/E0/Cgp9HWBuf--Aek0BAAT9zBvy7qI451.png"}),i(),o])}const D=n(k,[["render",y]]);export{B as __pageData,D as default};
