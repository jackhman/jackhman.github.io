import{_ as h,F as k,g as l,K as n,h as s,ar as t,l as i,o as p}from"./chunks/framework.VlluEs-f.js";const b=JSON.parse('{"title":"32路由机制：请求到底怎么走，它说了算（上）","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Dubbo源码解读与实战_文档/(4278) 32  路由机制：请求到底怎么走，它说了算（上）.md","filePath":"posts/backEnd/Dubbo源码解读与实战_文档/(4278) 32  路由机制：请求到底怎么走，它说了算（上）.md","lastUpdated":1718371218000}'),e={name:"posts/backEnd/Dubbo源码解读与实战_文档/(4278) 32  路由机制：请求到底怎么走，它说了算（上）.md"},r=t("",15),E=i("p",null,"RouterFactory 继承关系图",-1),d=i("p",null,[s("下面我们就来深入介绍下每个 RouterFactory 实现类以及对应的 Router 实现对象。"),i("strong",null,"Router 决定了一次 Dubbo 调用的目标服务，Router 接口的每个实现类代表了一个路由规则"),s("，当 Consumer 访问 Provider 时，Dubbo 根据路由规则筛选出合适的 Provider 列表，之后通过负载均衡算法再次进行筛选。Router 接口的继承关系如下图所示：")],-1),g=t("",25),o=t("",4),y=i("p",null,"whenCondition 集合示意图",-1),c=i("p",null,[s("同理，parseRule() 方法解析上述表达式 "),i("code",null,"=>"),s(" 之后的规则得到的 thenCondition 集合，如下图所示：")],-1),F=t("",18);function u(A,D,C,v,R,B){const a=k("Image");return p(),l("div",null,[r,n(a,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image/M00/6B/ED/CgqCHl-qOLWAf_G5AACv9PqZOrc667.png"}),s(),E,d,n(a,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image/M00/6B/E2/Ciqc1F-qOL2AAXYIAACMVPC1qW0732.png"}),s(),g,n(a,{alt:"2.png",src:"https://s0.lgstatic.com/i/image/M00/6D/97/CgqCHl-uM9aALLGaAAFMMnXRAPw685.png"}),s(),o,n(a,{alt:"3.png",src:"https://s0.lgstatic.com/i/image/M00/6D/8B/Ciqc1F-uM-OABiPoAADt1lcbl7U975.png"}),s(),y,c,n(a,{alt:"1.png",src:"https://s0.lgstatic.com/i/image/M00/6D/97/CgqCHl-uM-6AXnrOAAB6hJLFL50095.png"}),s(),F])}const _=h(e,[["render",u]]);export{b as __pageData,_ as default};
