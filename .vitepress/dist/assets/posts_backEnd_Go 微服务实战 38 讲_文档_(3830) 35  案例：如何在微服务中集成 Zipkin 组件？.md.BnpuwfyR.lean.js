import{_ as t,F as h,g as k,K as a,h as n,ar as p,l as s,o as l}from"./chunks/framework.VlluEs-f.js";const P=JSON.parse('{"title":"35案例：如何在微服务中集成Zipkin组件？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Go 微服务实战 38 讲_文档/(3830) 35  案例：如何在微服务中集成 Zipkin 组件？.md","filePath":"posts/backEnd/Go 微服务实战 38 讲_文档/(3830) 35  案例：如何在微服务中集成 Zipkin 组件？.md","lastUpdated":1718371218000}'),e={name:"posts/backEnd/Go 微服务实战 38 讲_文档/(3830) 35  案例：如何在微服务中集成 Zipkin 组件？.md"},E=p("",6),r=p("",26),g=s("p",null,"结果验证截图",-1),d=s("p",null,"可以看到，通过网关，我们可以正常访问字符串服务提供的接口。下面我们通过 Zipkin UI 来查看本次链路调用的信息，如下图所示：",-1),y=s("p",null,"Zipkin UI 查看链路调用的信息截图",-1),o=s("p",null,'在浏览器请求之后，可以在 Zipkin UI 中看到发送的请求记录（单击上方"Try Lens UI"切换成了 Lens UI，效果还不错），点击查看详细的链路调用情况，如下图所示：',-1),c=s("p",null,"Lens UI 截图",-1),F=s("p",null,"从调用链中可以看到，本次请求涉及两个服务：gateway-service 和 string-service。",-1),C=s("p",null,"整个链路有 3 个 Span：gateway、HTTP-transport 和 string-endpoint，确实如我们所定义的一样。这里我们主要看一下网关中的 Gateway Span 详情，如下图所示：",-1),u=p("",26);function A(D,B,T,v,b,_){const i=h("Image");return l(),k("div",null,[E,a(i,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image/M00/5E/75/Ciqc1F-GvryAbSsGAABD2LP4yN8428.png"}),n(),r,a(i,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image/M00/5E/75/Ciqc1F-GvvSAdvD2AAJxdVYATAU644.png"}),n(),g,d,a(i,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image/M00/5E/80/CgqCHl-GvvqAccZPAAPASa8eLYA067.png"}),n(),y,o,a(i,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image/M00/5E/75/Ciqc1F-GvwOAO5wJAANEaW1O3C4296.png"}),n(),c,F,C,a(i,{alt:"Drawing 4.png",src:"https://s0.lgstatic.com/i/image/M00/5E/80/CgqCHl-GvwuASVfGAAcZvmOB0Kc881.png"}),n(),u,a(i,{alt:"Drawing 5.png",src:"https://s0.lgstatic.com/i/image/M00/5E/81/CgqCHl-GvzeAWzGRAASmhMb8V3c466.png"})])}const m=t(e,[["render",A]]);export{P as __pageData,m as default};
