import{_ as h,F as p,g as k,K as a,h as s,ar as t,l as n,o as l}from"./chunks/framework.VlluEs-f.js";const P=JSON.parse('{"title":"47配置中心设计与实现：集中化配置and本地化配置，我都要（上）","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Dubbo源码解读与实战_文档/(6101) 47  配置中心设计与实现：集中化配置 and 本地化配置，我都要（上）.md","filePath":"posts/backEnd/Dubbo源码解读与实战_文档/(6101) 47  配置中心设计与实现：集中化配置 and 本地化配置，我都要（上）.md","lastUpdated":1718371218000}'),e={name:"posts/backEnd/Dubbo源码解读与实战_文档/(6101) 47  配置中心设计与实现：集中化配置 and 本地化配置，我都要（上）.md"},r=t("",9),E=n("p",null,[s("Configuration 接口核心方法"),n("br"),s(" 从上图中我们可以看到，Configuration 针对不同的 boolean、int、String 返回值都有对应的 get*() 方法，同时还提供了带有默认值的 get*() 方法。"),n("strong",null,'这些 get<p style="text-align:center">*() 方法底层首先调用 getInternalProperty() 方法获取配置值'),s("，然后调用 convert() 方法将获取到的配置值转换成返回值的类型之后返回。getInternalProperty() 是一个抽象方法，由 Configuration 接口的子类具体实现。")],-1),g=n("p",null,"下图展示了 Dubbo 中提供的 Configuration 接口实现，包括：SystemConfiguration、EnvironmentConfiguration、InmemoryConfiguration、PropertiesConfiguration、CompositeConfiguration、ConfigConfigurationAdapter 和 DynamicConfiguration。下面我们将结合具体代码逐个介绍其实现。",-1),d=t("",24),o=t("",16),y=n("p",null,"DynamicConfigurationFactory 继承关系图",-1),c=t("",13),F=t("",7);function u(C,D,A,f,m,b){const i=p("Image");return l(),k("div",null,[r,a(i,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image2/M01/04/94/Cip5yF_zz3yABBYdAACqAETTGm0778.png"}),s(),E,g,a(i,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image2/M01/04/94/Cip5yF_zz6eAMN_oAACEEj9pVjg547.png"}),s(),d,a(i,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image/M00/8C/BD/CgqCHl_zz8WAHdY3AAMJFKW_uQE360.png"}),s(),o,a(i,{alt:"11.png",src:"https://s0.lgstatic.com/i/image/M00/8C/CD/CgqCHl_0L-GAPVy9AAEqog2bl7U068.png"}),s(),y,a(i,{alt:"Drawing 4.png",src:"https://s0.lgstatic.com/i/image2/M01/04/94/Cip5yF_zz9iAM1YYAAB_QXlLDcU550.png"}),s(),c,a(i,{alt:"222.png",src:"https://s0.lgstatic.com/i/image/M00/8C/CD/CgqCHl_0L9WAYbfVAAGH_E-l-UU432.png"}),s(),F])}const B=h(e,[["render",u]]);export{P as __pageData,B as default};
